// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module write_back_output_re (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_buffer_0_address0,
        output_buffer_0_ce0,
        output_buffer_0_q0,
        output_buffer_1_address0,
        output_buffer_1_ce0,
        output_buffer_1_q0,
        output_buffer_2_address0,
        output_buffer_2_ce0,
        output_buffer_2_q0,
        output_buffer_3_address0,
        output_buffer_3_ce0,
        output_buffer_3_q0,
        output_buffer_4_address0,
        output_buffer_4_ce0,
        output_buffer_4_q0,
        output_buffer_5_address0,
        output_buffer_5_ce0,
        output_buffer_5_q0,
        output_buffer_6_address0,
        output_buffer_6_ce0,
        output_buffer_6_q0,
        output_buffer_7_address0,
        output_buffer_7_ce0,
        output_buffer_7_q0,
        output_buffer_8_address0,
        output_buffer_8_ce0,
        output_buffer_8_q0,
        output_buffer_9_address0,
        output_buffer_9_ce0,
        output_buffer_9_q0,
        output_buffer_10_address0,
        output_buffer_10_ce0,
        output_buffer_10_q0,
        output_buffer_11_address0,
        output_buffer_11_ce0,
        output_buffer_11_q0,
        output_buffer_12_address0,
        output_buffer_12_ce0,
        output_buffer_12_q0,
        output_buffer_13_address0,
        output_buffer_13_ce0,
        output_buffer_13_q0,
        output_buffer_14_address0,
        output_buffer_14_ce0,
        output_buffer_14_q0,
        output_buffer_15_address0,
        output_buffer_15_ce0,
        output_buffer_15_q0,
        output_buffer_16_address0,
        output_buffer_16_ce0,
        output_buffer_16_q0,
        output_buffer_17_address0,
        output_buffer_17_ce0,
        output_buffer_17_q0,
        output_buffer_18_address0,
        output_buffer_18_ce0,
        output_buffer_18_q0,
        output_buffer_19_address0,
        output_buffer_19_ce0,
        output_buffer_19_q0,
        output_buffer_20_address0,
        output_buffer_20_ce0,
        output_buffer_20_q0,
        output_buffer_21_address0,
        output_buffer_21_ce0,
        output_buffer_21_q0,
        output_buffer_22_address0,
        output_buffer_22_ce0,
        output_buffer_22_q0,
        output_buffer_23_address0,
        output_buffer_23_ce0,
        output_buffer_23_q0,
        output_buffer_24_address0,
        output_buffer_24_ce0,
        output_buffer_24_q0,
        output_buffer_25_address0,
        output_buffer_25_ce0,
        output_buffer_25_q0,
        output_buffer_26_address0,
        output_buffer_26_ce0,
        output_buffer_26_q0,
        output_buffer_27_address0,
        output_buffer_27_ce0,
        output_buffer_27_q0,
        output_buffer_28_address0,
        output_buffer_28_ce0,
        output_buffer_28_q0,
        output_buffer_29_address0,
        output_buffer_29_ce0,
        output_buffer_29_q0,
        output_buffer_30_address0,
        output_buffer_30_ce0,
        output_buffer_30_q0,
        output_buffer_31_address0,
        output_buffer_31_ce0,
        output_buffer_31_q0,
        output_buffer_32_address0,
        output_buffer_32_ce0,
        output_buffer_32_q0,
        output_buffer_33_address0,
        output_buffer_33_ce0,
        output_buffer_33_q0,
        output_buffer_34_address0,
        output_buffer_34_ce0,
        output_buffer_34_q0,
        output_buffer_35_address0,
        output_buffer_35_ce0,
        output_buffer_35_q0,
        output_buffer_36_address0,
        output_buffer_36_ce0,
        output_buffer_36_q0,
        output_buffer_37_address0,
        output_buffer_37_ce0,
        output_buffer_37_q0,
        output_buffer_38_address0,
        output_buffer_38_ce0,
        output_buffer_38_q0,
        output_buffer_39_address0,
        output_buffer_39_ce0,
        output_buffer_39_q0,
        output_buffer_40_address0,
        output_buffer_40_ce0,
        output_buffer_40_q0,
        output_buffer_41_address0,
        output_buffer_41_ce0,
        output_buffer_41_q0,
        output_buffer_42_address0,
        output_buffer_42_ce0,
        output_buffer_42_q0,
        output_buffer_43_address0,
        output_buffer_43_ce0,
        output_buffer_43_q0,
        output_buffer_44_address0,
        output_buffer_44_ce0,
        output_buffer_44_q0,
        output_buffer_45_address0,
        output_buffer_45_ce0,
        output_buffer_45_q0,
        output_buffer_46_address0,
        output_buffer_46_ce0,
        output_buffer_46_q0,
        output_buffer_47_address0,
        output_buffer_47_ce0,
        output_buffer_47_q0,
        output_buffer_48_address0,
        output_buffer_48_ce0,
        output_buffer_48_q0,
        output_buffer_49_address0,
        output_buffer_49_ce0,
        output_buffer_49_q0,
        output_buffer_50_address0,
        output_buffer_50_ce0,
        output_buffer_50_q0,
        output_buffer_51_address0,
        output_buffer_51_ce0,
        output_buffer_51_q0,
        output_buffer_52_address0,
        output_buffer_52_ce0,
        output_buffer_52_q0,
        output_buffer_53_address0,
        output_buffer_53_ce0,
        output_buffer_53_q0,
        output_buffer_54_address0,
        output_buffer_54_ce0,
        output_buffer_54_q0,
        output_buffer_55_address0,
        output_buffer_55_ce0,
        output_buffer_55_q0,
        output_buffer_56_address0,
        output_buffer_56_ce0,
        output_buffer_56_q0,
        output_buffer_57_address0,
        output_buffer_57_ce0,
        output_buffer_57_q0,
        output_buffer_58_address0,
        output_buffer_58_ce0,
        output_buffer_58_q0,
        output_buffer_59_address0,
        output_buffer_59_ce0,
        output_buffer_59_q0,
        m_axi_Output_r_AWVALID,
        m_axi_Output_r_AWREADY,
        m_axi_Output_r_AWADDR,
        m_axi_Output_r_AWID,
        m_axi_Output_r_AWLEN,
        m_axi_Output_r_AWSIZE,
        m_axi_Output_r_AWBURST,
        m_axi_Output_r_AWLOCK,
        m_axi_Output_r_AWCACHE,
        m_axi_Output_r_AWPROT,
        m_axi_Output_r_AWQOS,
        m_axi_Output_r_AWREGION,
        m_axi_Output_r_AWUSER,
        m_axi_Output_r_WVALID,
        m_axi_Output_r_WREADY,
        m_axi_Output_r_WDATA,
        m_axi_Output_r_WSTRB,
        m_axi_Output_r_WLAST,
        m_axi_Output_r_WID,
        m_axi_Output_r_WUSER,
        m_axi_Output_r_ARVALID,
        m_axi_Output_r_ARREADY,
        m_axi_Output_r_ARADDR,
        m_axi_Output_r_ARID,
        m_axi_Output_r_ARLEN,
        m_axi_Output_r_ARSIZE,
        m_axi_Output_r_ARBURST,
        m_axi_Output_r_ARLOCK,
        m_axi_Output_r_ARCACHE,
        m_axi_Output_r_ARPROT,
        m_axi_Output_r_ARQOS,
        m_axi_Output_r_ARREGION,
        m_axi_Output_r_ARUSER,
        m_axi_Output_r_RVALID,
        m_axi_Output_r_RREADY,
        m_axi_Output_r_RDATA,
        m_axi_Output_r_RLAST,
        m_axi_Output_r_RID,
        m_axi_Output_r_RUSER,
        m_axi_Output_r_RRESP,
        m_axi_Output_r_BVALID,
        m_axi_Output_r_BREADY,
        m_axi_Output_r_BRESP,
        m_axi_Output_r_BID,
        m_axi_Output_r_BUSER,
        Output_offset,
        r,
        c,
        m,
        Output_w,
        TM_MIN,
        TR_MIN,
        TC_MIN,
        OHxOW,
        IsNL,
        enable,
        InterSubOutput,
        ltype
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] output_buffer_0_address0;
output   output_buffer_0_ce0;
input  [31:0] output_buffer_0_q0;
output  [9:0] output_buffer_1_address0;
output   output_buffer_1_ce0;
input  [31:0] output_buffer_1_q0;
output  [9:0] output_buffer_2_address0;
output   output_buffer_2_ce0;
input  [31:0] output_buffer_2_q0;
output  [9:0] output_buffer_3_address0;
output   output_buffer_3_ce0;
input  [31:0] output_buffer_3_q0;
output  [9:0] output_buffer_4_address0;
output   output_buffer_4_ce0;
input  [31:0] output_buffer_4_q0;
output  [9:0] output_buffer_5_address0;
output   output_buffer_5_ce0;
input  [31:0] output_buffer_5_q0;
output  [9:0] output_buffer_6_address0;
output   output_buffer_6_ce0;
input  [31:0] output_buffer_6_q0;
output  [9:0] output_buffer_7_address0;
output   output_buffer_7_ce0;
input  [31:0] output_buffer_7_q0;
output  [9:0] output_buffer_8_address0;
output   output_buffer_8_ce0;
input  [31:0] output_buffer_8_q0;
output  [9:0] output_buffer_9_address0;
output   output_buffer_9_ce0;
input  [31:0] output_buffer_9_q0;
output  [9:0] output_buffer_10_address0;
output   output_buffer_10_ce0;
input  [31:0] output_buffer_10_q0;
output  [9:0] output_buffer_11_address0;
output   output_buffer_11_ce0;
input  [31:0] output_buffer_11_q0;
output  [9:0] output_buffer_12_address0;
output   output_buffer_12_ce0;
input  [31:0] output_buffer_12_q0;
output  [9:0] output_buffer_13_address0;
output   output_buffer_13_ce0;
input  [31:0] output_buffer_13_q0;
output  [9:0] output_buffer_14_address0;
output   output_buffer_14_ce0;
input  [31:0] output_buffer_14_q0;
output  [9:0] output_buffer_15_address0;
output   output_buffer_15_ce0;
input  [31:0] output_buffer_15_q0;
output  [9:0] output_buffer_16_address0;
output   output_buffer_16_ce0;
input  [31:0] output_buffer_16_q0;
output  [9:0] output_buffer_17_address0;
output   output_buffer_17_ce0;
input  [31:0] output_buffer_17_q0;
output  [9:0] output_buffer_18_address0;
output   output_buffer_18_ce0;
input  [31:0] output_buffer_18_q0;
output  [9:0] output_buffer_19_address0;
output   output_buffer_19_ce0;
input  [31:0] output_buffer_19_q0;
output  [9:0] output_buffer_20_address0;
output   output_buffer_20_ce0;
input  [31:0] output_buffer_20_q0;
output  [9:0] output_buffer_21_address0;
output   output_buffer_21_ce0;
input  [31:0] output_buffer_21_q0;
output  [9:0] output_buffer_22_address0;
output   output_buffer_22_ce0;
input  [31:0] output_buffer_22_q0;
output  [9:0] output_buffer_23_address0;
output   output_buffer_23_ce0;
input  [31:0] output_buffer_23_q0;
output  [9:0] output_buffer_24_address0;
output   output_buffer_24_ce0;
input  [31:0] output_buffer_24_q0;
output  [9:0] output_buffer_25_address0;
output   output_buffer_25_ce0;
input  [31:0] output_buffer_25_q0;
output  [9:0] output_buffer_26_address0;
output   output_buffer_26_ce0;
input  [31:0] output_buffer_26_q0;
output  [9:0] output_buffer_27_address0;
output   output_buffer_27_ce0;
input  [31:0] output_buffer_27_q0;
output  [9:0] output_buffer_28_address0;
output   output_buffer_28_ce0;
input  [31:0] output_buffer_28_q0;
output  [9:0] output_buffer_29_address0;
output   output_buffer_29_ce0;
input  [31:0] output_buffer_29_q0;
output  [9:0] output_buffer_30_address0;
output   output_buffer_30_ce0;
input  [31:0] output_buffer_30_q0;
output  [9:0] output_buffer_31_address0;
output   output_buffer_31_ce0;
input  [31:0] output_buffer_31_q0;
output  [9:0] output_buffer_32_address0;
output   output_buffer_32_ce0;
input  [31:0] output_buffer_32_q0;
output  [9:0] output_buffer_33_address0;
output   output_buffer_33_ce0;
input  [31:0] output_buffer_33_q0;
output  [9:0] output_buffer_34_address0;
output   output_buffer_34_ce0;
input  [31:0] output_buffer_34_q0;
output  [9:0] output_buffer_35_address0;
output   output_buffer_35_ce0;
input  [31:0] output_buffer_35_q0;
output  [9:0] output_buffer_36_address0;
output   output_buffer_36_ce0;
input  [31:0] output_buffer_36_q0;
output  [9:0] output_buffer_37_address0;
output   output_buffer_37_ce0;
input  [31:0] output_buffer_37_q0;
output  [9:0] output_buffer_38_address0;
output   output_buffer_38_ce0;
input  [31:0] output_buffer_38_q0;
output  [9:0] output_buffer_39_address0;
output   output_buffer_39_ce0;
input  [31:0] output_buffer_39_q0;
output  [9:0] output_buffer_40_address0;
output   output_buffer_40_ce0;
input  [31:0] output_buffer_40_q0;
output  [9:0] output_buffer_41_address0;
output   output_buffer_41_ce0;
input  [31:0] output_buffer_41_q0;
output  [9:0] output_buffer_42_address0;
output   output_buffer_42_ce0;
input  [31:0] output_buffer_42_q0;
output  [9:0] output_buffer_43_address0;
output   output_buffer_43_ce0;
input  [31:0] output_buffer_43_q0;
output  [9:0] output_buffer_44_address0;
output   output_buffer_44_ce0;
input  [31:0] output_buffer_44_q0;
output  [9:0] output_buffer_45_address0;
output   output_buffer_45_ce0;
input  [31:0] output_buffer_45_q0;
output  [9:0] output_buffer_46_address0;
output   output_buffer_46_ce0;
input  [31:0] output_buffer_46_q0;
output  [9:0] output_buffer_47_address0;
output   output_buffer_47_ce0;
input  [31:0] output_buffer_47_q0;
output  [9:0] output_buffer_48_address0;
output   output_buffer_48_ce0;
input  [31:0] output_buffer_48_q0;
output  [9:0] output_buffer_49_address0;
output   output_buffer_49_ce0;
input  [31:0] output_buffer_49_q0;
output  [9:0] output_buffer_50_address0;
output   output_buffer_50_ce0;
input  [31:0] output_buffer_50_q0;
output  [9:0] output_buffer_51_address0;
output   output_buffer_51_ce0;
input  [31:0] output_buffer_51_q0;
output  [9:0] output_buffer_52_address0;
output   output_buffer_52_ce0;
input  [31:0] output_buffer_52_q0;
output  [9:0] output_buffer_53_address0;
output   output_buffer_53_ce0;
input  [31:0] output_buffer_53_q0;
output  [9:0] output_buffer_54_address0;
output   output_buffer_54_ce0;
input  [31:0] output_buffer_54_q0;
output  [9:0] output_buffer_55_address0;
output   output_buffer_55_ce0;
input  [31:0] output_buffer_55_q0;
output  [9:0] output_buffer_56_address0;
output   output_buffer_56_ce0;
input  [31:0] output_buffer_56_q0;
output  [9:0] output_buffer_57_address0;
output   output_buffer_57_ce0;
input  [31:0] output_buffer_57_q0;
output  [9:0] output_buffer_58_address0;
output   output_buffer_58_ce0;
input  [31:0] output_buffer_58_q0;
output  [9:0] output_buffer_59_address0;
output   output_buffer_59_ce0;
input  [31:0] output_buffer_59_q0;
output   m_axi_Output_r_AWVALID;
input   m_axi_Output_r_AWREADY;
output  [31:0] m_axi_Output_r_AWADDR;
output  [0:0] m_axi_Output_r_AWID;
output  [31:0] m_axi_Output_r_AWLEN;
output  [2:0] m_axi_Output_r_AWSIZE;
output  [1:0] m_axi_Output_r_AWBURST;
output  [1:0] m_axi_Output_r_AWLOCK;
output  [3:0] m_axi_Output_r_AWCACHE;
output  [2:0] m_axi_Output_r_AWPROT;
output  [3:0] m_axi_Output_r_AWQOS;
output  [3:0] m_axi_Output_r_AWREGION;
output  [0:0] m_axi_Output_r_AWUSER;
output   m_axi_Output_r_WVALID;
input   m_axi_Output_r_WREADY;
output  [31:0] m_axi_Output_r_WDATA;
output  [3:0] m_axi_Output_r_WSTRB;
output   m_axi_Output_r_WLAST;
output  [0:0] m_axi_Output_r_WID;
output  [0:0] m_axi_Output_r_WUSER;
output   m_axi_Output_r_ARVALID;
input   m_axi_Output_r_ARREADY;
output  [31:0] m_axi_Output_r_ARADDR;
output  [0:0] m_axi_Output_r_ARID;
output  [31:0] m_axi_Output_r_ARLEN;
output  [2:0] m_axi_Output_r_ARSIZE;
output  [1:0] m_axi_Output_r_ARBURST;
output  [1:0] m_axi_Output_r_ARLOCK;
output  [3:0] m_axi_Output_r_ARCACHE;
output  [2:0] m_axi_Output_r_ARPROT;
output  [3:0] m_axi_Output_r_ARQOS;
output  [3:0] m_axi_Output_r_ARREGION;
output  [0:0] m_axi_Output_r_ARUSER;
input   m_axi_Output_r_RVALID;
output   m_axi_Output_r_RREADY;
input  [31:0] m_axi_Output_r_RDATA;
input   m_axi_Output_r_RLAST;
input  [0:0] m_axi_Output_r_RID;
input  [0:0] m_axi_Output_r_RUSER;
input  [1:0] m_axi_Output_r_RRESP;
input   m_axi_Output_r_BVALID;
output   m_axi_Output_r_BREADY;
input  [1:0] m_axi_Output_r_BRESP;
input  [0:0] m_axi_Output_r_BID;
input  [0:0] m_axi_Output_r_BUSER;
input  [29:0] Output_offset;
input  [15:0] r;
input  [15:0] c;
input  [15:0] m;
input  [15:0] Output_w;
input  [7:0] TM_MIN;
input  [7:0] TR_MIN;
input  [7:0] TC_MIN;
input  [31:0] OHxOW;
input   IsNL;
input   enable;
input  [31:0] InterSubOutput;
input  [7:0] ltype;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_buffer_0_ce0;
reg output_buffer_1_ce0;
reg output_buffer_2_ce0;
reg output_buffer_3_ce0;
reg output_buffer_4_ce0;
reg output_buffer_5_ce0;
reg output_buffer_6_ce0;
reg output_buffer_7_ce0;
reg output_buffer_8_ce0;
reg output_buffer_9_ce0;
reg output_buffer_10_ce0;
reg output_buffer_11_ce0;
reg output_buffer_12_ce0;
reg output_buffer_13_ce0;
reg output_buffer_14_ce0;
reg output_buffer_15_ce0;
reg output_buffer_16_ce0;
reg output_buffer_17_ce0;
reg output_buffer_18_ce0;
reg output_buffer_19_ce0;
reg output_buffer_20_ce0;
reg output_buffer_21_ce0;
reg output_buffer_22_ce0;
reg output_buffer_23_ce0;
reg output_buffer_24_ce0;
reg output_buffer_25_ce0;
reg output_buffer_26_ce0;
reg output_buffer_27_ce0;
reg output_buffer_28_ce0;
reg output_buffer_29_ce0;
reg output_buffer_30_ce0;
reg output_buffer_31_ce0;
reg output_buffer_32_ce0;
reg output_buffer_33_ce0;
reg output_buffer_34_ce0;
reg output_buffer_35_ce0;
reg output_buffer_36_ce0;
reg output_buffer_37_ce0;
reg output_buffer_38_ce0;
reg output_buffer_39_ce0;
reg output_buffer_40_ce0;
reg output_buffer_41_ce0;
reg output_buffer_42_ce0;
reg output_buffer_43_ce0;
reg output_buffer_44_ce0;
reg output_buffer_45_ce0;
reg output_buffer_46_ce0;
reg output_buffer_47_ce0;
reg output_buffer_48_ce0;
reg output_buffer_49_ce0;
reg output_buffer_50_ce0;
reg output_buffer_51_ce0;
reg output_buffer_52_ce0;
reg output_buffer_53_ce0;
reg output_buffer_54_ce0;
reg output_buffer_55_ce0;
reg output_buffer_56_ce0;
reg output_buffer_57_ce0;
reg output_buffer_58_ce0;
reg output_buffer_59_ce0;
reg m_axi_Output_r_AWVALID;
reg m_axi_Output_r_WVALID;
reg m_axi_Output_r_BREADY;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] local_buf0_address0;
reg    local_buf0_ce0;
reg    local_buf0_we0;
wire   [31:0] local_buf0_q0;
reg   [3:0] local_buf1_address0;
reg    local_buf1_ce0;
reg    local_buf1_we0;
wire   [31:0] local_buf1_q0;
wire   [0:0] enable_read_read_fu_232_p2;
wire   [31:0] mul_ln253_fu_531_p2;
reg   [31:0] mul_ln253_reg_744;
wire   [31:0] grp_fu_650_p3;
reg   [31:0] offset_reg_749;
wire    ap_CS_fsm_state2;
wire   [15:0] TM_MINxTR_MIN_fu_557_p2;
reg   [15:0] TM_MINxTR_MIN_reg_754;
wire   [15:0] add_ln263_fu_563_p2;
reg   [15:0] add_ln263_reg_759;
wire   [15:0] t_fu_574_p2;
reg   [15:0] t_reg_767;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln267_fu_580_p2;
reg   [0:0] icmp_ln267_reg_772;
wire   [0:0] icmp_ln263_fu_569_p2;
reg   [7:0] tm_n0_1_load_reg_777;
reg   [7:0] tm_n1_1_load_reg_783;
reg   [7:0] tr_n0_1_load_reg_789;
reg   [7:0] tr_n1_1_load_reg_795;
wire   [0:0] grp_fu_513_p2;
reg   [0:0] icmp_ln273_reg_801;
wire   [0:0] ap_phi_mux_pp_0_phi_fu_302_p4;
reg   [0:0] icmp_ln268_reg_806;
wire   [7:0] select_ln278_fu_634_p3;
wire    ap_CS_fsm_state5;
wire    grp_nonlinear_leaky_row_fu_358_ap_ready;
wire    grp_nonlinear_leaky_row_fu_358_ap_done;
reg   [0:0] pp_0_reg_298;
wire    grp_ofm_mmcpy_row_fu_496_ap_ready;
wire    grp_ofm_mmcpy_row_fu_496_ap_done;
reg    ap_block_state5_on_subcall_done;
wire   [7:0] select_ln278_1_fu_642_p3;
wire    grp_nonlinear_leaky_row_fu_358_ap_start;
wire    grp_nonlinear_leaky_row_fu_358_ap_idle;
wire   [3:0] grp_nonlinear_leaky_row_fu_358_local_buf_address0;
wire    grp_nonlinear_leaky_row_fu_358_local_buf_ce0;
wire    grp_nonlinear_leaky_row_fu_358_local_buf_we0;
wire   [31:0] grp_nonlinear_leaky_row_fu_358_local_buf_d0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_0_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_0_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_1_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_1_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_2_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_2_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_3_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_3_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_4_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_4_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_5_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_5_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_6_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_6_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_7_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_7_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_8_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_8_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_9_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_9_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_10_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_10_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_11_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_11_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_12_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_12_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_13_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_13_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_14_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_14_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_15_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_15_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_16_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_16_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_17_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_17_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_18_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_18_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_19_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_19_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_20_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_20_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_21_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_21_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_22_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_22_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_23_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_23_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_24_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_24_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_25_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_25_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_26_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_26_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_27_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_27_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_28_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_28_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_29_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_29_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_30_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_30_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_31_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_31_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_32_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_32_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_33_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_33_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_34_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_34_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_35_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_35_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_36_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_36_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_37_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_37_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_38_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_38_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_39_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_39_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_40_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_40_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_41_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_41_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_42_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_42_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_43_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_43_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_44_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_44_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_45_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_45_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_46_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_46_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_47_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_47_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_48_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_48_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_49_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_49_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_50_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_50_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_51_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_51_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_52_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_52_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_53_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_53_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_54_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_54_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_55_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_55_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_56_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_56_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_57_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_57_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_58_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_58_ce0;
wire   [9:0] grp_nonlinear_leaky_row_fu_358_Input_59_address0;
wire    grp_nonlinear_leaky_row_fu_358_Input_59_ce0;
reg   [7:0] grp_nonlinear_leaky_row_fu_358_tm_n_read;
reg   [7:0] grp_nonlinear_leaky_row_fu_358_tr_n_read;
wire    grp_nonlinear_leaky_row_fu_358_enable;
wire   [7:0] grp_nonlinear_leaky_row_fu_358_ap_return_0;
wire   [7:0] grp_nonlinear_leaky_row_fu_358_ap_return_1;
wire    grp_ofm_mmcpy_row_fu_496_ap_start;
wire    grp_ofm_mmcpy_row_fu_496_ap_idle;
wire    grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWVALID;
wire   [31:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWADDR;
wire   [0:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWID;
wire   [31:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWLEN;
wire   [2:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWSIZE;
wire   [1:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWBURST;
wire   [1:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWLOCK;
wire   [3:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWCACHE;
wire   [2:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWPROT;
wire   [3:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWQOS;
wire   [3:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWREGION;
wire   [0:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWUSER;
wire    grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WVALID;
wire   [31:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WDATA;
wire   [3:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WSTRB;
wire    grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WLAST;
wire   [0:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WID;
wire   [0:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WUSER;
wire    grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARVALID;
wire   [31:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARADDR;
wire   [0:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARID;
wire   [31:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARLEN;
wire   [2:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARSIZE;
wire   [1:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARBURST;
wire   [1:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARLOCK;
wire   [3:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARCACHE;
wire   [2:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARPROT;
wire   [3:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARQOS;
wire   [3:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARREGION;
wire   [0:0] grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARUSER;
wire    grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_RREADY;
wire    grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_BREADY;
wire   [3:0] grp_ofm_mmcpy_row_fu_496_local_buf_address0;
wire    grp_ofm_mmcpy_row_fu_496_local_buf_ce0;
reg   [31:0] grp_ofm_mmcpy_row_fu_496_local_buf_q0;
reg   [7:0] grp_ofm_mmcpy_row_fu_496_tm;
reg   [7:0] grp_ofm_mmcpy_row_fu_496_tr;
reg    grp_ofm_mmcpy_row_fu_496_enable;
reg   [0:0] ap_phi_mux_pp_1_phi_fu_349_p4;
reg   [7:0] tr_0_reg_310;
reg   [7:0] tm_0_reg_322;
reg   [15:0] t_0_reg_334;
reg    grp_nonlinear_leaky_row_fu_358_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
reg    grp_ofm_mmcpy_row_fu_496_ap_start_reg;
reg   [7:0] tm_n0_1_fu_204;
reg   [7:0] tm_n1_1_fu_208;
reg   [7:0] tr_n0_1_fu_212;
reg   [7:0] tr_n1_1_fu_216;
wire   [15:0] mul_ln253_fu_531_p0;
wire  signed [31:0] mul_ln253_fu_531_p1;
wire   [31:0] zext_ln253_3_fu_543_p1;
wire   [7:0] TM_MINxTR_MIN_fu_557_p0;
wire   [7:0] TM_MINxTR_MIN_fu_557_p1;
wire   [7:0] tr_fu_617_p2;
wire   [0:0] icmp_ln278_fu_623_p2;
wire   [7:0] tm_fu_628_p2;
wire   [15:0] grp_fu_650_p0;
wire   [15:0] grp_fu_650_p1;
wire   [31:0] grp_fu_650_p2;
reg   [5:0] ap_NS_fsm;
wire   [15:0] TM_MINxTR_MIN_fu_557_p00;
wire   [15:0] TM_MINxTR_MIN_fu_557_p10;
wire   [31:0] grp_fu_650_p00;
wire   [31:0] grp_fu_650_p10;
wire   [31:0] mul_ln253_fu_531_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_nonlinear_leaky_row_fu_358_ap_start_reg = 1'b0;
#0 grp_ofm_mmcpy_row_fu_496_ap_start_reg = 1'b0;
end

write_back_outputepQ #(
    .DataWidth( 32 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
local_buf0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_buf0_address0),
    .ce0(local_buf0_ce0),
    .we0(local_buf0_we0),
    .d0(grp_nonlinear_leaky_row_fu_358_local_buf_d0),
    .q0(local_buf0_q0)
);

write_back_outputepQ #(
    .DataWidth( 32 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
local_buf1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_buf1_address0),
    .ce0(local_buf1_ce0),
    .we0(local_buf1_we0),
    .d0(grp_nonlinear_leaky_row_fu_358_local_buf_d0),
    .q0(local_buf1_q0)
);

nonlinear_leaky_row grp_nonlinear_leaky_row_fu_358(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_nonlinear_leaky_row_fu_358_ap_start),
    .ap_done(grp_nonlinear_leaky_row_fu_358_ap_done),
    .ap_idle(grp_nonlinear_leaky_row_fu_358_ap_idle),
    .ap_ready(grp_nonlinear_leaky_row_fu_358_ap_ready),
    .local_buf_address0(grp_nonlinear_leaky_row_fu_358_local_buf_address0),
    .local_buf_ce0(grp_nonlinear_leaky_row_fu_358_local_buf_ce0),
    .local_buf_we0(grp_nonlinear_leaky_row_fu_358_local_buf_we0),
    .local_buf_d0(grp_nonlinear_leaky_row_fu_358_local_buf_d0),
    .Input_0_address0(grp_nonlinear_leaky_row_fu_358_Input_0_address0),
    .Input_0_ce0(grp_nonlinear_leaky_row_fu_358_Input_0_ce0),
    .Input_0_q0(output_buffer_0_q0),
    .Input_1_address0(grp_nonlinear_leaky_row_fu_358_Input_1_address0),
    .Input_1_ce0(grp_nonlinear_leaky_row_fu_358_Input_1_ce0),
    .Input_1_q0(output_buffer_1_q0),
    .Input_2_address0(grp_nonlinear_leaky_row_fu_358_Input_2_address0),
    .Input_2_ce0(grp_nonlinear_leaky_row_fu_358_Input_2_ce0),
    .Input_2_q0(output_buffer_2_q0),
    .Input_3_address0(grp_nonlinear_leaky_row_fu_358_Input_3_address0),
    .Input_3_ce0(grp_nonlinear_leaky_row_fu_358_Input_3_ce0),
    .Input_3_q0(output_buffer_3_q0),
    .Input_4_address0(grp_nonlinear_leaky_row_fu_358_Input_4_address0),
    .Input_4_ce0(grp_nonlinear_leaky_row_fu_358_Input_4_ce0),
    .Input_4_q0(output_buffer_4_q0),
    .Input_5_address0(grp_nonlinear_leaky_row_fu_358_Input_5_address0),
    .Input_5_ce0(grp_nonlinear_leaky_row_fu_358_Input_5_ce0),
    .Input_5_q0(output_buffer_5_q0),
    .Input_6_address0(grp_nonlinear_leaky_row_fu_358_Input_6_address0),
    .Input_6_ce0(grp_nonlinear_leaky_row_fu_358_Input_6_ce0),
    .Input_6_q0(output_buffer_6_q0),
    .Input_7_address0(grp_nonlinear_leaky_row_fu_358_Input_7_address0),
    .Input_7_ce0(grp_nonlinear_leaky_row_fu_358_Input_7_ce0),
    .Input_7_q0(output_buffer_7_q0),
    .Input_8_address0(grp_nonlinear_leaky_row_fu_358_Input_8_address0),
    .Input_8_ce0(grp_nonlinear_leaky_row_fu_358_Input_8_ce0),
    .Input_8_q0(output_buffer_8_q0),
    .Input_9_address0(grp_nonlinear_leaky_row_fu_358_Input_9_address0),
    .Input_9_ce0(grp_nonlinear_leaky_row_fu_358_Input_9_ce0),
    .Input_9_q0(output_buffer_9_q0),
    .Input_10_address0(grp_nonlinear_leaky_row_fu_358_Input_10_address0),
    .Input_10_ce0(grp_nonlinear_leaky_row_fu_358_Input_10_ce0),
    .Input_10_q0(output_buffer_10_q0),
    .Input_11_address0(grp_nonlinear_leaky_row_fu_358_Input_11_address0),
    .Input_11_ce0(grp_nonlinear_leaky_row_fu_358_Input_11_ce0),
    .Input_11_q0(output_buffer_11_q0),
    .Input_12_address0(grp_nonlinear_leaky_row_fu_358_Input_12_address0),
    .Input_12_ce0(grp_nonlinear_leaky_row_fu_358_Input_12_ce0),
    .Input_12_q0(output_buffer_12_q0),
    .Input_13_address0(grp_nonlinear_leaky_row_fu_358_Input_13_address0),
    .Input_13_ce0(grp_nonlinear_leaky_row_fu_358_Input_13_ce0),
    .Input_13_q0(output_buffer_13_q0),
    .Input_14_address0(grp_nonlinear_leaky_row_fu_358_Input_14_address0),
    .Input_14_ce0(grp_nonlinear_leaky_row_fu_358_Input_14_ce0),
    .Input_14_q0(output_buffer_14_q0),
    .Input_15_address0(grp_nonlinear_leaky_row_fu_358_Input_15_address0),
    .Input_15_ce0(grp_nonlinear_leaky_row_fu_358_Input_15_ce0),
    .Input_15_q0(output_buffer_15_q0),
    .Input_16_address0(grp_nonlinear_leaky_row_fu_358_Input_16_address0),
    .Input_16_ce0(grp_nonlinear_leaky_row_fu_358_Input_16_ce0),
    .Input_16_q0(output_buffer_16_q0),
    .Input_17_address0(grp_nonlinear_leaky_row_fu_358_Input_17_address0),
    .Input_17_ce0(grp_nonlinear_leaky_row_fu_358_Input_17_ce0),
    .Input_17_q0(output_buffer_17_q0),
    .Input_18_address0(grp_nonlinear_leaky_row_fu_358_Input_18_address0),
    .Input_18_ce0(grp_nonlinear_leaky_row_fu_358_Input_18_ce0),
    .Input_18_q0(output_buffer_18_q0),
    .Input_19_address0(grp_nonlinear_leaky_row_fu_358_Input_19_address0),
    .Input_19_ce0(grp_nonlinear_leaky_row_fu_358_Input_19_ce0),
    .Input_19_q0(output_buffer_19_q0),
    .Input_20_address0(grp_nonlinear_leaky_row_fu_358_Input_20_address0),
    .Input_20_ce0(grp_nonlinear_leaky_row_fu_358_Input_20_ce0),
    .Input_20_q0(output_buffer_20_q0),
    .Input_21_address0(grp_nonlinear_leaky_row_fu_358_Input_21_address0),
    .Input_21_ce0(grp_nonlinear_leaky_row_fu_358_Input_21_ce0),
    .Input_21_q0(output_buffer_21_q0),
    .Input_22_address0(grp_nonlinear_leaky_row_fu_358_Input_22_address0),
    .Input_22_ce0(grp_nonlinear_leaky_row_fu_358_Input_22_ce0),
    .Input_22_q0(output_buffer_22_q0),
    .Input_23_address0(grp_nonlinear_leaky_row_fu_358_Input_23_address0),
    .Input_23_ce0(grp_nonlinear_leaky_row_fu_358_Input_23_ce0),
    .Input_23_q0(output_buffer_23_q0),
    .Input_24_address0(grp_nonlinear_leaky_row_fu_358_Input_24_address0),
    .Input_24_ce0(grp_nonlinear_leaky_row_fu_358_Input_24_ce0),
    .Input_24_q0(output_buffer_24_q0),
    .Input_25_address0(grp_nonlinear_leaky_row_fu_358_Input_25_address0),
    .Input_25_ce0(grp_nonlinear_leaky_row_fu_358_Input_25_ce0),
    .Input_25_q0(output_buffer_25_q0),
    .Input_26_address0(grp_nonlinear_leaky_row_fu_358_Input_26_address0),
    .Input_26_ce0(grp_nonlinear_leaky_row_fu_358_Input_26_ce0),
    .Input_26_q0(output_buffer_26_q0),
    .Input_27_address0(grp_nonlinear_leaky_row_fu_358_Input_27_address0),
    .Input_27_ce0(grp_nonlinear_leaky_row_fu_358_Input_27_ce0),
    .Input_27_q0(output_buffer_27_q0),
    .Input_28_address0(grp_nonlinear_leaky_row_fu_358_Input_28_address0),
    .Input_28_ce0(grp_nonlinear_leaky_row_fu_358_Input_28_ce0),
    .Input_28_q0(output_buffer_28_q0),
    .Input_29_address0(grp_nonlinear_leaky_row_fu_358_Input_29_address0),
    .Input_29_ce0(grp_nonlinear_leaky_row_fu_358_Input_29_ce0),
    .Input_29_q0(output_buffer_29_q0),
    .Input_30_address0(grp_nonlinear_leaky_row_fu_358_Input_30_address0),
    .Input_30_ce0(grp_nonlinear_leaky_row_fu_358_Input_30_ce0),
    .Input_30_q0(output_buffer_30_q0),
    .Input_31_address0(grp_nonlinear_leaky_row_fu_358_Input_31_address0),
    .Input_31_ce0(grp_nonlinear_leaky_row_fu_358_Input_31_ce0),
    .Input_31_q0(output_buffer_31_q0),
    .Input_32_address0(grp_nonlinear_leaky_row_fu_358_Input_32_address0),
    .Input_32_ce0(grp_nonlinear_leaky_row_fu_358_Input_32_ce0),
    .Input_32_q0(output_buffer_32_q0),
    .Input_33_address0(grp_nonlinear_leaky_row_fu_358_Input_33_address0),
    .Input_33_ce0(grp_nonlinear_leaky_row_fu_358_Input_33_ce0),
    .Input_33_q0(output_buffer_33_q0),
    .Input_34_address0(grp_nonlinear_leaky_row_fu_358_Input_34_address0),
    .Input_34_ce0(grp_nonlinear_leaky_row_fu_358_Input_34_ce0),
    .Input_34_q0(output_buffer_34_q0),
    .Input_35_address0(grp_nonlinear_leaky_row_fu_358_Input_35_address0),
    .Input_35_ce0(grp_nonlinear_leaky_row_fu_358_Input_35_ce0),
    .Input_35_q0(output_buffer_35_q0),
    .Input_36_address0(grp_nonlinear_leaky_row_fu_358_Input_36_address0),
    .Input_36_ce0(grp_nonlinear_leaky_row_fu_358_Input_36_ce0),
    .Input_36_q0(output_buffer_36_q0),
    .Input_37_address0(grp_nonlinear_leaky_row_fu_358_Input_37_address0),
    .Input_37_ce0(grp_nonlinear_leaky_row_fu_358_Input_37_ce0),
    .Input_37_q0(output_buffer_37_q0),
    .Input_38_address0(grp_nonlinear_leaky_row_fu_358_Input_38_address0),
    .Input_38_ce0(grp_nonlinear_leaky_row_fu_358_Input_38_ce0),
    .Input_38_q0(output_buffer_38_q0),
    .Input_39_address0(grp_nonlinear_leaky_row_fu_358_Input_39_address0),
    .Input_39_ce0(grp_nonlinear_leaky_row_fu_358_Input_39_ce0),
    .Input_39_q0(output_buffer_39_q0),
    .Input_40_address0(grp_nonlinear_leaky_row_fu_358_Input_40_address0),
    .Input_40_ce0(grp_nonlinear_leaky_row_fu_358_Input_40_ce0),
    .Input_40_q0(output_buffer_40_q0),
    .Input_41_address0(grp_nonlinear_leaky_row_fu_358_Input_41_address0),
    .Input_41_ce0(grp_nonlinear_leaky_row_fu_358_Input_41_ce0),
    .Input_41_q0(output_buffer_41_q0),
    .Input_42_address0(grp_nonlinear_leaky_row_fu_358_Input_42_address0),
    .Input_42_ce0(grp_nonlinear_leaky_row_fu_358_Input_42_ce0),
    .Input_42_q0(output_buffer_42_q0),
    .Input_43_address0(grp_nonlinear_leaky_row_fu_358_Input_43_address0),
    .Input_43_ce0(grp_nonlinear_leaky_row_fu_358_Input_43_ce0),
    .Input_43_q0(output_buffer_43_q0),
    .Input_44_address0(grp_nonlinear_leaky_row_fu_358_Input_44_address0),
    .Input_44_ce0(grp_nonlinear_leaky_row_fu_358_Input_44_ce0),
    .Input_44_q0(output_buffer_44_q0),
    .Input_45_address0(grp_nonlinear_leaky_row_fu_358_Input_45_address0),
    .Input_45_ce0(grp_nonlinear_leaky_row_fu_358_Input_45_ce0),
    .Input_45_q0(output_buffer_45_q0),
    .Input_46_address0(grp_nonlinear_leaky_row_fu_358_Input_46_address0),
    .Input_46_ce0(grp_nonlinear_leaky_row_fu_358_Input_46_ce0),
    .Input_46_q0(output_buffer_46_q0),
    .Input_47_address0(grp_nonlinear_leaky_row_fu_358_Input_47_address0),
    .Input_47_ce0(grp_nonlinear_leaky_row_fu_358_Input_47_ce0),
    .Input_47_q0(output_buffer_47_q0),
    .Input_48_address0(grp_nonlinear_leaky_row_fu_358_Input_48_address0),
    .Input_48_ce0(grp_nonlinear_leaky_row_fu_358_Input_48_ce0),
    .Input_48_q0(output_buffer_48_q0),
    .Input_49_address0(grp_nonlinear_leaky_row_fu_358_Input_49_address0),
    .Input_49_ce0(grp_nonlinear_leaky_row_fu_358_Input_49_ce0),
    .Input_49_q0(output_buffer_49_q0),
    .Input_50_address0(grp_nonlinear_leaky_row_fu_358_Input_50_address0),
    .Input_50_ce0(grp_nonlinear_leaky_row_fu_358_Input_50_ce0),
    .Input_50_q0(output_buffer_50_q0),
    .Input_51_address0(grp_nonlinear_leaky_row_fu_358_Input_51_address0),
    .Input_51_ce0(grp_nonlinear_leaky_row_fu_358_Input_51_ce0),
    .Input_51_q0(output_buffer_51_q0),
    .Input_52_address0(grp_nonlinear_leaky_row_fu_358_Input_52_address0),
    .Input_52_ce0(grp_nonlinear_leaky_row_fu_358_Input_52_ce0),
    .Input_52_q0(output_buffer_52_q0),
    .Input_53_address0(grp_nonlinear_leaky_row_fu_358_Input_53_address0),
    .Input_53_ce0(grp_nonlinear_leaky_row_fu_358_Input_53_ce0),
    .Input_53_q0(output_buffer_53_q0),
    .Input_54_address0(grp_nonlinear_leaky_row_fu_358_Input_54_address0),
    .Input_54_ce0(grp_nonlinear_leaky_row_fu_358_Input_54_ce0),
    .Input_54_q0(output_buffer_54_q0),
    .Input_55_address0(grp_nonlinear_leaky_row_fu_358_Input_55_address0),
    .Input_55_ce0(grp_nonlinear_leaky_row_fu_358_Input_55_ce0),
    .Input_55_q0(output_buffer_55_q0),
    .Input_56_address0(grp_nonlinear_leaky_row_fu_358_Input_56_address0),
    .Input_56_ce0(grp_nonlinear_leaky_row_fu_358_Input_56_ce0),
    .Input_56_q0(output_buffer_56_q0),
    .Input_57_address0(grp_nonlinear_leaky_row_fu_358_Input_57_address0),
    .Input_57_ce0(grp_nonlinear_leaky_row_fu_358_Input_57_ce0),
    .Input_57_q0(output_buffer_57_q0),
    .Input_58_address0(grp_nonlinear_leaky_row_fu_358_Input_58_address0),
    .Input_58_ce0(grp_nonlinear_leaky_row_fu_358_Input_58_ce0),
    .Input_58_q0(output_buffer_58_q0),
    .Input_59_address0(grp_nonlinear_leaky_row_fu_358_Input_59_address0),
    .Input_59_ce0(grp_nonlinear_leaky_row_fu_358_Input_59_ce0),
    .Input_59_q0(output_buffer_59_q0),
    .tm(tm_0_reg_322),
    .tr(tr_0_reg_310),
    .tm_n_read(grp_nonlinear_leaky_row_fu_358_tm_n_read),
    .tr_n_read(grp_nonlinear_leaky_row_fu_358_tr_n_read),
    .TC_MIN(TC_MIN),
    .IsNL(IsNL),
    .enable(grp_nonlinear_leaky_row_fu_358_enable),
    .InterSubOutput(InterSubOutput),
    .ltype(ltype),
    .ap_return_0(grp_nonlinear_leaky_row_fu_358_ap_return_0),
    .ap_return_1(grp_nonlinear_leaky_row_fu_358_ap_return_1)
);

ofm_mmcpy_row grp_ofm_mmcpy_row_fu_496(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ofm_mmcpy_row_fu_496_ap_start),
    .ap_done(grp_ofm_mmcpy_row_fu_496_ap_done),
    .ap_idle(grp_ofm_mmcpy_row_fu_496_ap_idle),
    .ap_ready(grp_ofm_mmcpy_row_fu_496_ap_ready),
    .m_axi_Output_r_AWVALID(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWVALID),
    .m_axi_Output_r_AWREADY(m_axi_Output_r_AWREADY),
    .m_axi_Output_r_AWADDR(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWADDR),
    .m_axi_Output_r_AWID(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWID),
    .m_axi_Output_r_AWLEN(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWLEN),
    .m_axi_Output_r_AWSIZE(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWSIZE),
    .m_axi_Output_r_AWBURST(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWBURST),
    .m_axi_Output_r_AWLOCK(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWLOCK),
    .m_axi_Output_r_AWCACHE(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWCACHE),
    .m_axi_Output_r_AWPROT(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWPROT),
    .m_axi_Output_r_AWQOS(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWQOS),
    .m_axi_Output_r_AWREGION(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWREGION),
    .m_axi_Output_r_AWUSER(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWUSER),
    .m_axi_Output_r_WVALID(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WVALID),
    .m_axi_Output_r_WREADY(m_axi_Output_r_WREADY),
    .m_axi_Output_r_WDATA(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WDATA),
    .m_axi_Output_r_WSTRB(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WSTRB),
    .m_axi_Output_r_WLAST(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WLAST),
    .m_axi_Output_r_WID(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WID),
    .m_axi_Output_r_WUSER(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WUSER),
    .m_axi_Output_r_ARVALID(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARVALID),
    .m_axi_Output_r_ARREADY(1'b0),
    .m_axi_Output_r_ARADDR(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARADDR),
    .m_axi_Output_r_ARID(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARID),
    .m_axi_Output_r_ARLEN(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARLEN),
    .m_axi_Output_r_ARSIZE(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARSIZE),
    .m_axi_Output_r_ARBURST(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARBURST),
    .m_axi_Output_r_ARLOCK(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARLOCK),
    .m_axi_Output_r_ARCACHE(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARCACHE),
    .m_axi_Output_r_ARPROT(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARPROT),
    .m_axi_Output_r_ARQOS(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARQOS),
    .m_axi_Output_r_ARREGION(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARREGION),
    .m_axi_Output_r_ARUSER(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_ARUSER),
    .m_axi_Output_r_RVALID(1'b0),
    .m_axi_Output_r_RREADY(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_RREADY),
    .m_axi_Output_r_RDATA(32'd0),
    .m_axi_Output_r_RLAST(1'b0),
    .m_axi_Output_r_RID(1'd0),
    .m_axi_Output_r_RUSER(1'd0),
    .m_axi_Output_r_RRESP(2'd0),
    .m_axi_Output_r_BVALID(m_axi_Output_r_BVALID),
    .m_axi_Output_r_BREADY(grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_BREADY),
    .m_axi_Output_r_BRESP(m_axi_Output_r_BRESP),
    .m_axi_Output_r_BID(m_axi_Output_r_BID),
    .m_axi_Output_r_BUSER(m_axi_Output_r_BUSER),
    .Output_offset(Output_offset),
    .local_buf_address0(grp_ofm_mmcpy_row_fu_496_local_buf_address0),
    .local_buf_ce0(grp_ofm_mmcpy_row_fu_496_local_buf_ce0),
    .local_buf_q0(grp_ofm_mmcpy_row_fu_496_local_buf_q0),
    .offset(offset_reg_749),
    .OHxOW(OHxOW),
    .Output_w(Output_w),
    .TC_MIN(TC_MIN),
    .tm(grp_ofm_mmcpy_row_fu_496_tm),
    .tr(grp_ofm_mmcpy_row_fu_496_tr),
    .enable(grp_ofm_mmcpy_row_fu_496_enable)
);

FPGA_Acc_mac_mulaerQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
FPGA_Acc_mac_mulaerQ_U923(
    .din0(grp_fu_650_p0),
    .din1(grp_fu_650_p1),
    .din2(grp_fu_650_p2),
    .dout(grp_fu_650_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_nonlinear_leaky_row_fu_358_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
            grp_nonlinear_leaky_row_fu_358_ap_start_reg <= 1'b1;
        end else if ((grp_nonlinear_leaky_row_fu_358_ap_ready == 1'b1)) begin
            grp_nonlinear_leaky_row_fu_358_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ofm_mmcpy_row_fu_496_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
            grp_ofm_mmcpy_row_fu_496_ap_start_reg <= 1'b1;
        end else if ((grp_ofm_mmcpy_row_fu_496_ap_ready == 1'b1)) begin
            grp_ofm_mmcpy_row_fu_496_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        pp_0_reg_298 <= ap_phi_mux_pp_1_phi_fu_349_p4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pp_0_reg_298 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        t_0_reg_334 <= t_reg_767;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_0_reg_334 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        tm_0_reg_322 <= select_ln278_1_fu_642_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tm_0_reg_322 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        tr_0_reg_310 <= select_ln278_fu_634_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tr_0_reg_310 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        TM_MINxTR_MIN_reg_754 <= TM_MINxTR_MIN_fu_557_p2;
        add_ln263_reg_759 <= add_ln263_fu_563_p2;
        offset_reg_749 <= grp_fu_650_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((enable_read_read_fu_232_p2 == 1'd1) & (icmp_ln263_fu_569_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln267_reg_772 <= icmp_ln267_fu_580_p2;
        tm_n0_1_load_reg_777 <= tm_n0_1_fu_204;
        tm_n1_1_load_reg_783 <= tm_n1_1_fu_208;
        tr_n0_1_load_reg_789 <= tr_n0_1_fu_212;
        tr_n1_1_load_reg_795 <= tr_n1_1_fu_216;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_pp_0_phi_fu_302_p4 == 1'd1) & (enable_read_read_fu_232_p2 == 1'd1) & (icmp_ln263_fu_569_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln268_reg_806 <= grp_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((enable_read_read_fu_232_p2 == 1'd1) & (ap_phi_mux_pp_0_phi_fu_302_p4 == 1'd0) & (icmp_ln263_fu_569_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln273_reg_801 <= grp_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((enable_read_read_fu_232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        mul_ln253_reg_744 <= mul_ln253_fu_531_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((enable_read_read_fu_232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        t_reg_767 <= t_fu_574_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state5_on_subcall_done) & (pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        tm_n0_1_fu_204 <= grp_nonlinear_leaky_row_fu_358_ap_return_0;
        tr_n0_1_fu_212 <= grp_nonlinear_leaky_row_fu_358_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state5_on_subcall_done) & (pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tm_n1_1_fu_208 <= grp_nonlinear_leaky_row_fu_358_ap_return_0;
        tr_n1_1_fu_216 <= grp_nonlinear_leaky_row_fu_358_ap_return_1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & ((icmp_ln263_fu_569_p2 == 1'd1) | (enable_read_read_fu_232_p2 == 1'd0))) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd0)) begin
            ap_phi_mux_pp_1_phi_fu_349_p4 = 1'd1;
        end else if ((pp_0_reg_298 == 1'd1)) begin
            ap_phi_mux_pp_1_phi_fu_349_p4 = 1'd0;
        end else begin
            ap_phi_mux_pp_1_phi_fu_349_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_pp_1_phi_fu_349_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln263_fu_569_p2 == 1'd1) | (enable_read_read_fu_232_p2 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd1)) begin
            grp_nonlinear_leaky_row_fu_358_tm_n_read = tm_n0_1_load_reg_777;
        end else if ((pp_0_reg_298 == 1'd0)) begin
            grp_nonlinear_leaky_row_fu_358_tm_n_read = tm_n1_1_load_reg_783;
        end else begin
            grp_nonlinear_leaky_row_fu_358_tm_n_read = 'bx;
        end
    end else begin
        grp_nonlinear_leaky_row_fu_358_tm_n_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd1)) begin
            grp_nonlinear_leaky_row_fu_358_tr_n_read = tr_n0_1_load_reg_789;
        end else if ((pp_0_reg_298 == 1'd0)) begin
            grp_nonlinear_leaky_row_fu_358_tr_n_read = tr_n1_1_load_reg_795;
        end else begin
            grp_nonlinear_leaky_row_fu_358_tr_n_read = 'bx;
        end
    end else begin
        grp_nonlinear_leaky_row_fu_358_tr_n_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd1)) begin
            grp_ofm_mmcpy_row_fu_496_enable = icmp_ln268_reg_806;
        end else if ((pp_0_reg_298 == 1'd0)) begin
            grp_ofm_mmcpy_row_fu_496_enable = icmp_ln273_reg_801;
        end else begin
            grp_ofm_mmcpy_row_fu_496_enable = 'bx;
        end
    end else begin
        grp_ofm_mmcpy_row_fu_496_enable = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd1)) begin
            grp_ofm_mmcpy_row_fu_496_local_buf_q0 = local_buf1_q0;
        end else if ((pp_0_reg_298 == 1'd0)) begin
            grp_ofm_mmcpy_row_fu_496_local_buf_q0 = local_buf0_q0;
        end else begin
            grp_ofm_mmcpy_row_fu_496_local_buf_q0 = 'bx;
        end
    end else begin
        grp_ofm_mmcpy_row_fu_496_local_buf_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd1)) begin
            grp_ofm_mmcpy_row_fu_496_tm = tm_n1_1_load_reg_783;
        end else if ((pp_0_reg_298 == 1'd0)) begin
            grp_ofm_mmcpy_row_fu_496_tm = tm_n0_1_load_reg_777;
        end else begin
            grp_ofm_mmcpy_row_fu_496_tm = 'bx;
        end
    end else begin
        grp_ofm_mmcpy_row_fu_496_tm = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd1)) begin
            grp_ofm_mmcpy_row_fu_496_tr = tr_n1_1_load_reg_795;
        end else if ((pp_0_reg_298 == 1'd0)) begin
            grp_ofm_mmcpy_row_fu_496_tr = tr_n0_1_load_reg_789;
        end else begin
            grp_ofm_mmcpy_row_fu_496_tr = 'bx;
        end
    end else begin
        grp_ofm_mmcpy_row_fu_496_tr = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd0)) begin
            local_buf0_address0 = grp_ofm_mmcpy_row_fu_496_local_buf_address0;
        end else if ((pp_0_reg_298 == 1'd1)) begin
            local_buf0_address0 = grp_nonlinear_leaky_row_fu_358_local_buf_address0;
        end else begin
            local_buf0_address0 = 'bx;
        end
    end else begin
        local_buf0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd0)) begin
            local_buf0_ce0 = grp_ofm_mmcpy_row_fu_496_local_buf_ce0;
        end else if ((pp_0_reg_298 == 1'd1)) begin
            local_buf0_ce0 = grp_nonlinear_leaky_row_fu_358_local_buf_ce0;
        end else begin
            local_buf0_ce0 = 1'b0;
        end
    end else begin
        local_buf0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        local_buf0_we0 = grp_nonlinear_leaky_row_fu_358_local_buf_we0;
    end else begin
        local_buf0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd1)) begin
            local_buf1_address0 = grp_ofm_mmcpy_row_fu_496_local_buf_address0;
        end else if ((pp_0_reg_298 == 1'd0)) begin
            local_buf1_address0 = grp_nonlinear_leaky_row_fu_358_local_buf_address0;
        end else begin
            local_buf1_address0 = 'bx;
        end
    end else begin
        local_buf1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((pp_0_reg_298 == 1'd1)) begin
            local_buf1_ce0 = grp_ofm_mmcpy_row_fu_496_local_buf_ce0;
        end else if ((pp_0_reg_298 == 1'd0)) begin
            local_buf1_ce0 = grp_nonlinear_leaky_row_fu_358_local_buf_ce0;
        end else begin
            local_buf1_ce0 = 1'b0;
        end
    end else begin
        local_buf1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        local_buf1_we0 = grp_nonlinear_leaky_row_fu_358_local_buf_we0;
    end else begin
        local_buf1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | ((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        m_axi_Output_r_AWVALID = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWVALID;
    end else begin
        m_axi_Output_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | ((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        m_axi_Output_r_BREADY = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_BREADY;
    end else begin
        m_axi_Output_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | ((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        m_axi_Output_r_WVALID = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WVALID;
    end else begin
        m_axi_Output_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_0_ce0 = grp_nonlinear_leaky_row_fu_358_Input_0_ce0;
    end else begin
        output_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_10_ce0 = grp_nonlinear_leaky_row_fu_358_Input_10_ce0;
    end else begin
        output_buffer_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_11_ce0 = grp_nonlinear_leaky_row_fu_358_Input_11_ce0;
    end else begin
        output_buffer_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_12_ce0 = grp_nonlinear_leaky_row_fu_358_Input_12_ce0;
    end else begin
        output_buffer_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_13_ce0 = grp_nonlinear_leaky_row_fu_358_Input_13_ce0;
    end else begin
        output_buffer_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_14_ce0 = grp_nonlinear_leaky_row_fu_358_Input_14_ce0;
    end else begin
        output_buffer_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_15_ce0 = grp_nonlinear_leaky_row_fu_358_Input_15_ce0;
    end else begin
        output_buffer_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_16_ce0 = grp_nonlinear_leaky_row_fu_358_Input_16_ce0;
    end else begin
        output_buffer_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_17_ce0 = grp_nonlinear_leaky_row_fu_358_Input_17_ce0;
    end else begin
        output_buffer_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_18_ce0 = grp_nonlinear_leaky_row_fu_358_Input_18_ce0;
    end else begin
        output_buffer_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_19_ce0 = grp_nonlinear_leaky_row_fu_358_Input_19_ce0;
    end else begin
        output_buffer_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_1_ce0 = grp_nonlinear_leaky_row_fu_358_Input_1_ce0;
    end else begin
        output_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_20_ce0 = grp_nonlinear_leaky_row_fu_358_Input_20_ce0;
    end else begin
        output_buffer_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_21_ce0 = grp_nonlinear_leaky_row_fu_358_Input_21_ce0;
    end else begin
        output_buffer_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_22_ce0 = grp_nonlinear_leaky_row_fu_358_Input_22_ce0;
    end else begin
        output_buffer_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_23_ce0 = grp_nonlinear_leaky_row_fu_358_Input_23_ce0;
    end else begin
        output_buffer_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_24_ce0 = grp_nonlinear_leaky_row_fu_358_Input_24_ce0;
    end else begin
        output_buffer_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_25_ce0 = grp_nonlinear_leaky_row_fu_358_Input_25_ce0;
    end else begin
        output_buffer_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_26_ce0 = grp_nonlinear_leaky_row_fu_358_Input_26_ce0;
    end else begin
        output_buffer_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_27_ce0 = grp_nonlinear_leaky_row_fu_358_Input_27_ce0;
    end else begin
        output_buffer_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_28_ce0 = grp_nonlinear_leaky_row_fu_358_Input_28_ce0;
    end else begin
        output_buffer_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_29_ce0 = grp_nonlinear_leaky_row_fu_358_Input_29_ce0;
    end else begin
        output_buffer_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_2_ce0 = grp_nonlinear_leaky_row_fu_358_Input_2_ce0;
    end else begin
        output_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_30_ce0 = grp_nonlinear_leaky_row_fu_358_Input_30_ce0;
    end else begin
        output_buffer_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_31_ce0 = grp_nonlinear_leaky_row_fu_358_Input_31_ce0;
    end else begin
        output_buffer_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_32_ce0 = grp_nonlinear_leaky_row_fu_358_Input_32_ce0;
    end else begin
        output_buffer_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_33_ce0 = grp_nonlinear_leaky_row_fu_358_Input_33_ce0;
    end else begin
        output_buffer_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_34_ce0 = grp_nonlinear_leaky_row_fu_358_Input_34_ce0;
    end else begin
        output_buffer_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_35_ce0 = grp_nonlinear_leaky_row_fu_358_Input_35_ce0;
    end else begin
        output_buffer_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_36_ce0 = grp_nonlinear_leaky_row_fu_358_Input_36_ce0;
    end else begin
        output_buffer_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_37_ce0 = grp_nonlinear_leaky_row_fu_358_Input_37_ce0;
    end else begin
        output_buffer_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_38_ce0 = grp_nonlinear_leaky_row_fu_358_Input_38_ce0;
    end else begin
        output_buffer_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_39_ce0 = grp_nonlinear_leaky_row_fu_358_Input_39_ce0;
    end else begin
        output_buffer_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_3_ce0 = grp_nonlinear_leaky_row_fu_358_Input_3_ce0;
    end else begin
        output_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_40_ce0 = grp_nonlinear_leaky_row_fu_358_Input_40_ce0;
    end else begin
        output_buffer_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_41_ce0 = grp_nonlinear_leaky_row_fu_358_Input_41_ce0;
    end else begin
        output_buffer_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_42_ce0 = grp_nonlinear_leaky_row_fu_358_Input_42_ce0;
    end else begin
        output_buffer_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_43_ce0 = grp_nonlinear_leaky_row_fu_358_Input_43_ce0;
    end else begin
        output_buffer_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_44_ce0 = grp_nonlinear_leaky_row_fu_358_Input_44_ce0;
    end else begin
        output_buffer_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_45_ce0 = grp_nonlinear_leaky_row_fu_358_Input_45_ce0;
    end else begin
        output_buffer_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_46_ce0 = grp_nonlinear_leaky_row_fu_358_Input_46_ce0;
    end else begin
        output_buffer_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_47_ce0 = grp_nonlinear_leaky_row_fu_358_Input_47_ce0;
    end else begin
        output_buffer_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_48_ce0 = grp_nonlinear_leaky_row_fu_358_Input_48_ce0;
    end else begin
        output_buffer_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_49_ce0 = grp_nonlinear_leaky_row_fu_358_Input_49_ce0;
    end else begin
        output_buffer_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_4_ce0 = grp_nonlinear_leaky_row_fu_358_Input_4_ce0;
    end else begin
        output_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_50_ce0 = grp_nonlinear_leaky_row_fu_358_Input_50_ce0;
    end else begin
        output_buffer_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_51_ce0 = grp_nonlinear_leaky_row_fu_358_Input_51_ce0;
    end else begin
        output_buffer_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_52_ce0 = grp_nonlinear_leaky_row_fu_358_Input_52_ce0;
    end else begin
        output_buffer_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_53_ce0 = grp_nonlinear_leaky_row_fu_358_Input_53_ce0;
    end else begin
        output_buffer_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_54_ce0 = grp_nonlinear_leaky_row_fu_358_Input_54_ce0;
    end else begin
        output_buffer_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_55_ce0 = grp_nonlinear_leaky_row_fu_358_Input_55_ce0;
    end else begin
        output_buffer_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_56_ce0 = grp_nonlinear_leaky_row_fu_358_Input_56_ce0;
    end else begin
        output_buffer_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_57_ce0 = grp_nonlinear_leaky_row_fu_358_Input_57_ce0;
    end else begin
        output_buffer_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_58_ce0 = grp_nonlinear_leaky_row_fu_358_Input_58_ce0;
    end else begin
        output_buffer_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_59_ce0 = grp_nonlinear_leaky_row_fu_358_Input_59_ce0;
    end else begin
        output_buffer_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_5_ce0 = grp_nonlinear_leaky_row_fu_358_Input_5_ce0;
    end else begin
        output_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_6_ce0 = grp_nonlinear_leaky_row_fu_358_Input_6_ce0;
    end else begin
        output_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_7_ce0 = grp_nonlinear_leaky_row_fu_358_Input_7_ce0;
    end else begin
        output_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_8_ce0 = grp_nonlinear_leaky_row_fu_358_Input_8_ce0;
    end else begin
        output_buffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_0_reg_298 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((pp_0_reg_298 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        output_buffer_9_ce0 = grp_nonlinear_leaky_row_fu_358_Input_9_ce0;
    end else begin
        output_buffer_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((enable_read_read_fu_232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((enable_read_read_fu_232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln263_fu_569_p2 == 1'd1) | (enable_read_read_fu_232_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((ap_phi_mux_pp_0_phi_fu_302_p4 == 1'd1) & (enable_read_read_fu_232_p2 == 1'd1) & (icmp_ln263_fu_569_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign TM_MINxTR_MIN_fu_557_p0 = TM_MINxTR_MIN_fu_557_p00;

assign TM_MINxTR_MIN_fu_557_p00 = TR_MIN;

assign TM_MINxTR_MIN_fu_557_p1 = TM_MINxTR_MIN_fu_557_p10;

assign TM_MINxTR_MIN_fu_557_p10 = TM_MIN;

assign TM_MINxTR_MIN_fu_557_p2 = (TM_MINxTR_MIN_fu_557_p0 * TM_MINxTR_MIN_fu_557_p1);

assign add_ln263_fu_563_p2 = (TM_MINxTR_MIN_fu_557_p2 + 16'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state5_on_subcall_done = (((pp_0_reg_298 == 1'd1) & (grp_ofm_mmcpy_row_fu_496_ap_done == 1'b0)) | ((pp_0_reg_298 == 1'd0) & (grp_ofm_mmcpy_row_fu_496_ap_done == 1'b0)) | ((pp_0_reg_298 == 1'd1) & (grp_nonlinear_leaky_row_fu_358_ap_done == 1'b0)) | ((pp_0_reg_298 == 1'd0) & (grp_nonlinear_leaky_row_fu_358_ap_done == 1'b0)));
end

assign ap_phi_mux_pp_0_phi_fu_302_p4 = pp_0_reg_298;

assign enable_read_read_fu_232_p2 = enable;

assign grp_fu_513_p2 = ((t_0_reg_334 != 16'd0) ? 1'b1 : 1'b0);

assign grp_fu_650_p0 = grp_fu_650_p00;

assign grp_fu_650_p00 = Output_w;

assign grp_fu_650_p1 = grp_fu_650_p10;

assign grp_fu_650_p10 = r;

assign grp_fu_650_p2 = (mul_ln253_reg_744 + zext_ln253_3_fu_543_p1);

assign grp_nonlinear_leaky_row_fu_358_ap_start = grp_nonlinear_leaky_row_fu_358_ap_start_reg;

assign grp_nonlinear_leaky_row_fu_358_enable = icmp_ln267_reg_772;

assign grp_ofm_mmcpy_row_fu_496_ap_start = grp_ofm_mmcpy_row_fu_496_ap_start_reg;

assign icmp_ln263_fu_569_p2 = ((t_0_reg_334 == add_ln263_reg_759) ? 1'b1 : 1'b0);

assign icmp_ln267_fu_580_p2 = ((t_0_reg_334 != TM_MINxTR_MIN_reg_754) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_623_p2 = ((tr_fu_617_p2 == TR_MIN) ? 1'b1 : 1'b0);

assign m_axi_Output_r_ARADDR = 32'd0;

assign m_axi_Output_r_ARBURST = 2'd0;

assign m_axi_Output_r_ARCACHE = 4'd0;

assign m_axi_Output_r_ARID = 1'd0;

assign m_axi_Output_r_ARLEN = 32'd0;

assign m_axi_Output_r_ARLOCK = 2'd0;

assign m_axi_Output_r_ARPROT = 3'd0;

assign m_axi_Output_r_ARQOS = 4'd0;

assign m_axi_Output_r_ARREGION = 4'd0;

assign m_axi_Output_r_ARSIZE = 3'd0;

assign m_axi_Output_r_ARUSER = 1'd0;

assign m_axi_Output_r_ARVALID = 1'b0;

assign m_axi_Output_r_AWADDR = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWADDR;

assign m_axi_Output_r_AWBURST = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWBURST;

assign m_axi_Output_r_AWCACHE = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWCACHE;

assign m_axi_Output_r_AWID = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWID;

assign m_axi_Output_r_AWLEN = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWLEN;

assign m_axi_Output_r_AWLOCK = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWLOCK;

assign m_axi_Output_r_AWPROT = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWPROT;

assign m_axi_Output_r_AWQOS = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWQOS;

assign m_axi_Output_r_AWREGION = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWREGION;

assign m_axi_Output_r_AWSIZE = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWSIZE;

assign m_axi_Output_r_AWUSER = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_AWUSER;

assign m_axi_Output_r_RREADY = 1'b0;

assign m_axi_Output_r_WDATA = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WDATA;

assign m_axi_Output_r_WID = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WID;

assign m_axi_Output_r_WLAST = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WLAST;

assign m_axi_Output_r_WSTRB = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WSTRB;

assign m_axi_Output_r_WUSER = grp_ofm_mmcpy_row_fu_496_m_axi_Output_r_WUSER;

assign mul_ln253_fu_531_p0 = mul_ln253_fu_531_p00;

assign mul_ln253_fu_531_p00 = m;

assign mul_ln253_fu_531_p1 = OHxOW;

assign mul_ln253_fu_531_p2 = ($signed({{1'b0}, {mul_ln253_fu_531_p0}}) * $signed(mul_ln253_fu_531_p1));

assign output_buffer_0_address0 = grp_nonlinear_leaky_row_fu_358_Input_0_address0;

assign output_buffer_10_address0 = grp_nonlinear_leaky_row_fu_358_Input_10_address0;

assign output_buffer_11_address0 = grp_nonlinear_leaky_row_fu_358_Input_11_address0;

assign output_buffer_12_address0 = grp_nonlinear_leaky_row_fu_358_Input_12_address0;

assign output_buffer_13_address0 = grp_nonlinear_leaky_row_fu_358_Input_13_address0;

assign output_buffer_14_address0 = grp_nonlinear_leaky_row_fu_358_Input_14_address0;

assign output_buffer_15_address0 = grp_nonlinear_leaky_row_fu_358_Input_15_address0;

assign output_buffer_16_address0 = grp_nonlinear_leaky_row_fu_358_Input_16_address0;

assign output_buffer_17_address0 = grp_nonlinear_leaky_row_fu_358_Input_17_address0;

assign output_buffer_18_address0 = grp_nonlinear_leaky_row_fu_358_Input_18_address0;

assign output_buffer_19_address0 = grp_nonlinear_leaky_row_fu_358_Input_19_address0;

assign output_buffer_1_address0 = grp_nonlinear_leaky_row_fu_358_Input_1_address0;

assign output_buffer_20_address0 = grp_nonlinear_leaky_row_fu_358_Input_20_address0;

assign output_buffer_21_address0 = grp_nonlinear_leaky_row_fu_358_Input_21_address0;

assign output_buffer_22_address0 = grp_nonlinear_leaky_row_fu_358_Input_22_address0;

assign output_buffer_23_address0 = grp_nonlinear_leaky_row_fu_358_Input_23_address0;

assign output_buffer_24_address0 = grp_nonlinear_leaky_row_fu_358_Input_24_address0;

assign output_buffer_25_address0 = grp_nonlinear_leaky_row_fu_358_Input_25_address0;

assign output_buffer_26_address0 = grp_nonlinear_leaky_row_fu_358_Input_26_address0;

assign output_buffer_27_address0 = grp_nonlinear_leaky_row_fu_358_Input_27_address0;

assign output_buffer_28_address0 = grp_nonlinear_leaky_row_fu_358_Input_28_address0;

assign output_buffer_29_address0 = grp_nonlinear_leaky_row_fu_358_Input_29_address0;

assign output_buffer_2_address0 = grp_nonlinear_leaky_row_fu_358_Input_2_address0;

assign output_buffer_30_address0 = grp_nonlinear_leaky_row_fu_358_Input_30_address0;

assign output_buffer_31_address0 = grp_nonlinear_leaky_row_fu_358_Input_31_address0;

assign output_buffer_32_address0 = grp_nonlinear_leaky_row_fu_358_Input_32_address0;

assign output_buffer_33_address0 = grp_nonlinear_leaky_row_fu_358_Input_33_address0;

assign output_buffer_34_address0 = grp_nonlinear_leaky_row_fu_358_Input_34_address0;

assign output_buffer_35_address0 = grp_nonlinear_leaky_row_fu_358_Input_35_address0;

assign output_buffer_36_address0 = grp_nonlinear_leaky_row_fu_358_Input_36_address0;

assign output_buffer_37_address0 = grp_nonlinear_leaky_row_fu_358_Input_37_address0;

assign output_buffer_38_address0 = grp_nonlinear_leaky_row_fu_358_Input_38_address0;

assign output_buffer_39_address0 = grp_nonlinear_leaky_row_fu_358_Input_39_address0;

assign output_buffer_3_address0 = grp_nonlinear_leaky_row_fu_358_Input_3_address0;

assign output_buffer_40_address0 = grp_nonlinear_leaky_row_fu_358_Input_40_address0;

assign output_buffer_41_address0 = grp_nonlinear_leaky_row_fu_358_Input_41_address0;

assign output_buffer_42_address0 = grp_nonlinear_leaky_row_fu_358_Input_42_address0;

assign output_buffer_43_address0 = grp_nonlinear_leaky_row_fu_358_Input_43_address0;

assign output_buffer_44_address0 = grp_nonlinear_leaky_row_fu_358_Input_44_address0;

assign output_buffer_45_address0 = grp_nonlinear_leaky_row_fu_358_Input_45_address0;

assign output_buffer_46_address0 = grp_nonlinear_leaky_row_fu_358_Input_46_address0;

assign output_buffer_47_address0 = grp_nonlinear_leaky_row_fu_358_Input_47_address0;

assign output_buffer_48_address0 = grp_nonlinear_leaky_row_fu_358_Input_48_address0;

assign output_buffer_49_address0 = grp_nonlinear_leaky_row_fu_358_Input_49_address0;

assign output_buffer_4_address0 = grp_nonlinear_leaky_row_fu_358_Input_4_address0;

assign output_buffer_50_address0 = grp_nonlinear_leaky_row_fu_358_Input_50_address0;

assign output_buffer_51_address0 = grp_nonlinear_leaky_row_fu_358_Input_51_address0;

assign output_buffer_52_address0 = grp_nonlinear_leaky_row_fu_358_Input_52_address0;

assign output_buffer_53_address0 = grp_nonlinear_leaky_row_fu_358_Input_53_address0;

assign output_buffer_54_address0 = grp_nonlinear_leaky_row_fu_358_Input_54_address0;

assign output_buffer_55_address0 = grp_nonlinear_leaky_row_fu_358_Input_55_address0;

assign output_buffer_56_address0 = grp_nonlinear_leaky_row_fu_358_Input_56_address0;

assign output_buffer_57_address0 = grp_nonlinear_leaky_row_fu_358_Input_57_address0;

assign output_buffer_58_address0 = grp_nonlinear_leaky_row_fu_358_Input_58_address0;

assign output_buffer_59_address0 = grp_nonlinear_leaky_row_fu_358_Input_59_address0;

assign output_buffer_5_address0 = grp_nonlinear_leaky_row_fu_358_Input_5_address0;

assign output_buffer_6_address0 = grp_nonlinear_leaky_row_fu_358_Input_6_address0;

assign output_buffer_7_address0 = grp_nonlinear_leaky_row_fu_358_Input_7_address0;

assign output_buffer_8_address0 = grp_nonlinear_leaky_row_fu_358_Input_8_address0;

assign output_buffer_9_address0 = grp_nonlinear_leaky_row_fu_358_Input_9_address0;

assign select_ln278_1_fu_642_p3 = ((icmp_ln278_fu_623_p2[0:0] === 1'b1) ? tm_fu_628_p2 : tm_0_reg_322);

assign select_ln278_fu_634_p3 = ((icmp_ln278_fu_623_p2[0:0] === 1'b1) ? 8'd0 : tr_fu_617_p2);

assign t_fu_574_p2 = (t_0_reg_334 + 16'd1);

assign tm_fu_628_p2 = (tm_0_reg_322 + 8'd1);

assign tr_fu_617_p2 = (tr_0_reg_310 + 8'd1);

assign zext_ln253_3_fu_543_p1 = c;

endmodule //write_back_output_re
